personalService.contractualObligationForSubstitute=If the worker can't or doesn't want to do the work, Does the contract state that they're allowed to send someone else?
personalService.contractualObligationInPractice=If the worker can't or doesn't want to do the work, Do they have to send someone else?
personalService.contractrualRightForSubstitute=If the worker can't or doesn't want to do the work, Does the contract state that they're allowed to send someone else?
personalService.actualRightToSendSubstitute=If the worker can't or doesn't want to do the work, Are they allowed to send someone else?
personalService.contractualRightReflectInPractice=
personalService.engagerArrangeIfWorkerIsUnwillingOrUnable=If the worker can't or doesn't want to do the work, Does the end client get someone else to do it?
personalService.possibleSubstituteRejection=If the worker decided to send someone else to do the work today, Could the end client turn away the other person, even if they're qualified to do the work?
personalService.contractTermsWorkerPaysSubstitute=Does the contract state that the worker has to pay the other person who they bring in to do the work?
personalService.workerSentActualSubstitute=If they couldn't or didn't want to do the work, Has the worker ever sent someone else to do the work instead?
personalService.actualSubstituteRejection=Did the end client turn the other person away?
personalService.possibleHelper=Is the worker allowed to get someone to help them do the work for this contract?
personalService.wouldWorkerPayHelper=Do they have to pay the helper?
personalService.workerSentActualHelper=Has someone helped the worker do the work for this contract?
personalService.workerPayActualHelper=Did they pay the helper?
formElements.buttonText=Continue
decision.in.ir35=You are inside IR35
decision.out.ir35=You are outside IR35
decision.unknown=Undecided
