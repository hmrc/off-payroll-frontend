# microservice specific routes

GET        /                                            controllers.IndexController.onPageLoad
GET        /setup                                       controllers.IndexController.onPageLoad

GET        /assets/*file                                controllers.Assets.versioned(path="/public", file: Asset)

GET        /language/:lang                              controllers.LanguageSwitchController.switchToLanguage(lang: String)

GET        /service-reset                               controllers.errors.SessionExpiredController.onPageLoad
POST       /service-reset                               controllers.errors.SessionExpiredController.onSubmit

GET        /unauthorised                                controllers.errors.UnauthorisedController.onPageLoad

GET        /about-your-result                           controllers.sections.setup.AboutYourResultController.onPageLoad
POST       /about-your-result                           controllers.sections.setup.AboutYourResultController.onSubmit

GET        /about-you                                   controllers.sections.setup.AboutYouController.onPageLoad(mode: Mode = NormalMode)
POST       /about-you                                   controllers.sections.setup.AboutYouController.onSubmit(mode: Mode = NormalMode)
GET        /about-you/edit                              controllers.sections.setup.AboutYouController.onPageLoad(mode: Mode = CheckMode)
POST       /about-you/edit                              controllers.sections.setup.AboutYouController.onSubmit(mode: Mode = CheckMode)

GET        /tool-not-needed                             controllers.sections.setup.ToolNotNeededController.onPageLoad
POST       /tool-not-needed                             controllers.sections.setup.ToolNotNeededController.onSubmit

GET        /work-started                                controllers.sections.setup.ContractStartedController.onPageLoad(mode: Mode = NormalMode)
POST       /work-started                                controllers.sections.setup.ContractStartedController.onSubmit(mode: Mode = NormalMode)
GET        /work-started/edit                           controllers.sections.setup.ContractStartedController.onPageLoad(mode: Mode = CheckMode)
POST       /work-started/edit                           controllers.sections.setup.ContractStartedController.onSubmit(mode: Mode = CheckMode)

GET        /worker-trading-as                           controllers.sections.setup.WorkerTypeController.onPageLoad(mode: Mode = NormalMode)
POST       /worker-trading-as                           controllers.sections.setup.WorkerTypeController.onSubmit(mode: Mode = NormalMode)
GET        /worker-trading-as/edit                      controllers.sections.setup.WorkerTypeController.onPageLoad(mode: Mode = CheckMode)
POST       /worker-trading-as/edit                      controllers.sections.setup.WorkerTypeController.onSubmit(mode: Mode = CheckMode)

GET        /is-private-sector                           controllers.sections.setup.IsWorkForPrivateSectorController.onPageLoad(mode: Mode = NormalMode)
POST       /is-private-sector                           controllers.sections.setup.IsWorkForPrivateSectorController.onSubmit(mode: Mode = NormalMode)
GET        /is-private-sector/edit                      controllers.sections.setup.IsWorkForPrivateSectorController.onPageLoad(mode: Mode = CheckMode)
POST       /is-private-sector/edit                      controllers.sections.setup.IsWorkForPrivateSectorController.onSubmit(mode: Mode = CheckMode)

GET        /office-holder-duties                        controllers.sections.exit.OfficeHolderController.onPageLoad(mode: Mode = NormalMode)
POST       /office-holder-duties                        controllers.sections.exit.OfficeHolderController.onSubmit(mode: Mode = NormalMode)
GET        /office-holder-duties/edit                   controllers.sections.exit.OfficeHolderController.onPageLoad(mode: Mode = CheckMode)
POST       /office-holder-duties/edit                   controllers.sections.exit.OfficeHolderController.onSubmit(mode: Mode = CheckMode)

GET        /worker-sent-substitute                      controllers.sections.personalService.ArrangedSubstituteController.onPageLoad(mode: Mode = NormalMode)
POST       /worker-sent-substitute                      controllers.sections.personalService.ArrangedSubstituteController.onSubmit(mode: Mode = NormalMode)
GET        /worker-sent-substitute/edit                 controllers.sections.personalService.ArrangedSubstituteController.onPageLoad(mode: Mode = CheckMode)
POST       /worker-sent-substitute/edit                 controllers.sections.personalService.ArrangedSubstituteController.onSubmit(mode: Mode = CheckMode)

GET        /worker-paid-substitute                      controllers.sections.personalService.DidPaySubstituteController.onPageLoad(mode: Mode = NormalMode)
POST       /worker-paid-substitute                      controllers.sections.personalService.DidPaySubstituteController.onSubmit(mode: Mode = NormalMode)
GET        /worker-paid-substitute/edit                 controllers.sections.personalService.DidPaySubstituteController.onPageLoad(mode: Mode = CheckMode)
POST       /worker-paid-substitute/edit                 controllers.sections.personalService.DidPaySubstituteController.onSubmit(mode: Mode = CheckMode)

GET        /substitute-rejected                         controllers.sections.personalService.RejectSubstituteController.onPageLoad(mode: Mode = NormalMode)
POST       /substitute-rejected                         controllers.sections.personalService.RejectSubstituteController.onSubmit(mode: Mode = NormalMode)
GET        /substitute-rejected/edit                    controllers.sections.personalService.RejectSubstituteController.onPageLoad(mode: Mode = CheckMode)
POST       /substitute-rejected/edit                    controllers.sections.personalService.RejectSubstituteController.onSubmit(mode: Mode = CheckMode)

GET        /worker-would-pay-substitute                 controllers.sections.personalService.WouldWorkerPaySubstituteController.onPageLoad(mode: Mode = NormalMode)
POST       /worker-would-pay-substitute                 controllers.sections.personalService.WouldWorkerPaySubstituteController.onSubmit(mode: Mode = NormalMode)
GET        /worker-would-pay-substitute/edit            controllers.sections.personalService.WouldWorkerPaySubstituteController.onPageLoad(mode: Mode = CheckMode)
POST       /worker-would-pay-substitute/edit            controllers.sections.personalService.WouldWorkerPaySubstituteController.onSubmit(mode: Mode = CheckMode)

GET        /worker-paid-helper                          controllers.sections.personalService.NeededToPayHelperController.onPageLoad(mode: Mode = NormalMode)
POST       /worker-paid-helper                          controllers.sections.personalService.NeededToPayHelperController.onSubmit(mode: Mode = NormalMode)
GET        /worker-paid-helper/edit                     controllers.sections.personalService.NeededToPayHelperController.onPageLoad(mode: Mode = CheckMode)
POST       /worker-paid-helper/edit                     controllers.sections.personalService.NeededToPayHelperController.onSubmit(mode: Mode = CheckMode)

GET        /change-worker-role                          controllers.sections.control.MoveWorkerController.onPageLoad(mode: Mode = NormalMode)
POST       /change-worker-role                          controllers.sections.control.MoveWorkerController.onSubmit(mode: Mode = NormalMode)
GET        /change-worker-role/edit                     controllers.sections.control.MoveWorkerController.onPageLoad(mode: Mode = CheckMode)
POST       /change-worker-role/edit                     controllers.sections.control.MoveWorkerController.onSubmit(mode: Mode = CheckMode)

GET        /change-how-work-is-done                     controllers.sections.control.HowWorkIsDoneController.onPageLoad(mode: Mode = NormalMode)
POST       /change-how-work-is-done                     controllers.sections.control.HowWorkIsDoneController.onSubmit(mode: Mode = NormalMode)
GET        /change-how-work-is-done/edit                controllers.sections.control.HowWorkIsDoneController.onPageLoad(mode: Mode = CheckMode)
POST       /change-how-work-is-done/edit                controllers.sections.control.HowWorkIsDoneController.onSubmit(mode: Mode = CheckMode)

GET        /change-worker-hours                         controllers.sections.control.ScheduleOfWorkingHoursController.onPageLoad(mode: Mode = NormalMode)
POST       /change-worker-hours                         controllers.sections.control.ScheduleOfWorkingHoursController.onSubmit(mode: Mode = NormalMode)
GET        /change-worker-hours/edit                    controllers.sections.control.ScheduleOfWorkingHoursController.onPageLoad(mode: Mode = CheckMode)
POST       /change-worker-hours/edit                    controllers.sections.control.ScheduleOfWorkingHoursController.onSubmit(mode: Mode = CheckMode)

GET        /change-worker-location                      controllers.sections.control.ChooseWhereWorkController.onPageLoad(mode: Mode = NormalMode)
POST       /change-worker-location                      controllers.sections.control.ChooseWhereWorkController.onSubmit(mode: Mode = NormalMode)
GET        /change-worker-location/edit                 controllers.sections.control.ChooseWhereWorkController.onPageLoad(mode: Mode = CheckMode)
POST       /change-worker-location/edit                 controllers.sections.control.ChooseWhereWorkController.onSubmit(mode: Mode = CheckMode)

GET        /worker-cannot-claim                         controllers.sections.financialRisk.CannotClaimAsExpenseController.onPageLoad(mode: Mode = NormalMode)
POST       /worker-cannot-claim                         controllers.sections.financialRisk.CannotClaimAsExpenseController.onSubmit(mode: Mode = NormalMode)
GET        /worker-cannot-claim/edit                    controllers.sections.financialRisk.CannotClaimAsExpenseController.onPageLoad(mode: Mode = CheckMode)
POST       /worker-cannot-claim/edit                    controllers.sections.financialRisk.CannotClaimAsExpenseController.onSubmit(mode: Mode = CheckMode)

GET        /worker-compensation                         controllers.sections.financialRisk.HowWorkerIsPaidController.onPageLoad(mode: Mode = NormalMode)
POST       /worker-compensation                         controllers.sections.financialRisk.HowWorkerIsPaidController.onSubmit(mode: Mode = NormalMode)
GET        /worker-compensation/edit                    controllers.sections.financialRisk.HowWorkerIsPaidController.onPageLoad(mode: Mode = CheckMode)
POST       /worker-compensation/edit                    controllers.sections.financialRisk.HowWorkerIsPaidController.onSubmit(mode: Mode = CheckMode)

GET        /put-work-right                              controllers.sections.financialRisk.PutRightAtOwnCostController.onPageLoad(mode: Mode = NormalMode)
POST       /put-work-right                              controllers.sections.financialRisk.PutRightAtOwnCostController.onSubmit(mode: Mode = NormalMode)
GET        /put-work-right/edit                         controllers.sections.financialRisk.PutRightAtOwnCostController.onPageLoad(mode: Mode = CheckMode)
POST       /put-work-right/edit                         controllers.sections.financialRisk.PutRightAtOwnCostController.onSubmit(mode: Mode = CheckMode)

GET        /worker-benefits                             controllers.sections.partParcel.BenefitsController.onPageLoad(mode: Mode = NormalMode)
POST       /worker-benefits                             controllers.sections.partParcel.BenefitsController.onSubmit(mode: Mode = NormalMode)
GET        /worker-benefits/edit                        controllers.sections.partParcel.BenefitsController.onPageLoad(mode: Mode = CheckMode)
POST       /worker-benefits/edit                        controllers.sections.partParcel.BenefitsController.onSubmit(mode: Mode = CheckMode)

GET        /manager-duties                              controllers.sections.partParcel.LineManagerDutiesController.onPageLoad(mode: Mode = NormalMode)
POST       /manager-duties                              controllers.sections.partParcel.LineManagerDutiesController.onSubmit(mode: Mode = NormalMode)
GET        /manager-duties/edit                         controllers.sections.partParcel.LineManagerDutiesController.onPageLoad(mode: Mode = CheckMode)
POST       /manager-duties/edit                         controllers.sections.partParcel.LineManagerDutiesController.onSubmit(mode: Mode = CheckMode)

GET        /external-interaction                        controllers.sections.partParcel.InteractWithStakeholdersController.onPageLoad(mode: Mode = NormalMode)
POST       /external-interaction                        controllers.sections.partParcel.InteractWithStakeholdersController.onSubmit(mode: Mode = NormalMode)
GET        /external-interaction/edit                   controllers.sections.partParcel.InteractWithStakeholdersController.onPageLoad(mode: Mode = CheckMode)
POST       /external-interaction/edit                   controllers.sections.partParcel.InteractWithStakeholdersController.onSubmit(mode: Mode = CheckMode)

GET        /identify-worker                             controllers.sections.partParcel.IdentifyToStakeholdersController.onPageLoad(mode: Mode = NormalMode)
POST       /identify-worker                             controllers.sections.partParcel.IdentifyToStakeholdersController.onSubmit(mode: Mode = NormalMode)
GET        /identify-worker/edit                        controllers.sections.partParcel.IdentifyToStakeholdersController.onPageLoad(mode: Mode = CheckMode)
POST       /identify-worker/edit                        controllers.sections.partParcel.IdentifyToStakeholdersController.onSubmit(mode: Mode = CheckMode)

GET        /your-result                                 controllers.ResultController.onPageLoad()
POST       /your-result                                 controllers.ResultController.onSubmit()

GET        /add-details-for-reference                   controllers.PDFController.onPageLoad(mode: Mode = NormalMode)
POST       /add-details-for-reference                   controllers.PDFController.onSubmit(mode: Mode = NormalMode)
GET        /add-details-for-reference/edit              controllers.PDFController.onPageLoad(mode: Mode = CheckMode)
POST       /add-details-for-reference/edit              controllers.PDFController.onSubmit(mode: Mode = CheckMode)

GET        /agency-advisory                             controllers.sections.setup.AgencyAdvisoryController.onPageLoad()
POST       /agency-advisory                             controllers.sections.setup.AgencyAdvisoryController.onSubmit()

GET        /worker-advisory                             controllers.sections.setup.WorkerAdvisoryController.onPageLoad()
POST       /worker-advisory                             controllers.sections.setup.WorkerAdvisoryController.onSubmit()

GET        /hirer-advisory                              controllers.sections.setup.HirerAdvisoryController.onPageLoad()
POST       /hirer-advisory                              controllers.sections.setup.HirerAdvisoryController.onSubmit()

GET        /you-have-left-the-tool                      controllers.sections.setup.LeaveController.onPageLoad()

GET        /business-size                               controllers.sections.setup.BusinessSizeController.onPageLoad(mode: Mode = NormalMode)
POST       /business-size                               controllers.sections.setup.BusinessSizeController.onSubmit(mode: Mode = NormalMode)
GET        /business-size/edit                          controllers.sections.setup.BusinessSizeController.onPageLoad(mode: Mode = CheckMode)
POST       /business-size/edit                          controllers.sections.setup.BusinessSizeController.onSubmit(mode: Mode = CheckMode)

GET        /check-your-answers                          controllers.CheckYourAnswersController.onPageLoad()
POST       /check-your-answers                          controllers.CheckYourAnswersController.onSubmit()
